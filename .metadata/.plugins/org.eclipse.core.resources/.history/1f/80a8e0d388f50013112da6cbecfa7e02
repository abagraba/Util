package com.mimvista.mimcloud.commands;

import java.io.IOException;
import java.util.List;
import java.util.Map;

import org.apache.commons.httpclient.HttpMethod;
import org.apache.commons.httpclient.methods.HeadMethod;
import org.apache.commons.httpclient.methods.StringRequestEntity;

import com.google.gson.reflect.TypeToken;
import com.mimvista.cloud.CloudUtil;
import com.mimvista.cloud.shared.common.S3SeriesURL;
import com.mimvista.cloud.shared.common.Wurly;
import com.mimvista.mimcloud.commands.CloudCommands.ReleasedCommand;
import com.mimvista.mimcloud.connection.CloudClient;
import com.mimvista.mimcloud.connection.CloudResponseException;
import com.mimvista.util.MIMLog;

public class GetS3SeriesHeadURLCommand extends ReleasedCommand<Map<Long, Map<String, S3SeriesURL>>>{

	private List<Long> ids;
	
	public GetS3SeriesHeadURLCommand(CloudClient client, List<Long> ids) {
		super(client);
		this.ids = ids;
	}

	@Override
	protected HttpMethod request() {
		HeadMethod head = new HeadMethod(Wurly.MIM_GET_S3_SERIES_HEAD_URL.getSvcLoc());
		head.setRequestHeader(new StringRequestEntity(CloudUtil.gson().toJson(ids, CloudUtil.longListType)));
		return head;
	}

	@Override
	protected Map<Long, Map<String, S3SeriesURL>> process(HttpMethod method) throws CloudResponseException {
		try {
			return CloudUtil.gson().fromJson(method.getResponseBodyAsString(), new TypeToken<Map<Long, Map<String, S3SeriesURL>>>(){}.getType());
		}
		catch (IOException e) {
			MIMLog.error("Deserialization error", GetS3SeriesHeadURLCommand.class);
			return null;
		}
	}
	
	
}
