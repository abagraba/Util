package com.mimvista.cloud.organizer;

import com.mimvista.cloud.organizer.login.controller.LoginController;
import com.mimvista.cloud.organizer.ui.CloudOrganizerFrame;
import com.mimvista.cloud.shared.common.AccountSummary;
import com.mimvista.mimcloud.commands.AccountCommands.GetAccountSummaryCommand;
import com.mimvista.mimcloud.connection.CloudClient;
import com.mimvista.mimcloud.connection.CloudConfigs;
import com.mimvista.mimcloud.connection.CloudCredentials;
import com.mimvista.mimcloud.connection.CloudManager;
import com.mimvista.mimcloud.connection.CloudResponseException;
import com.mimvista.util.MIMLog;

public class CloudOrganizer {
	
	private static CloudClient cloudClient;
	
	private static CloudOrganizerCredentialsProvider credsProv;
	
	private static final int MAX_RETRIES = 3;
	
	private static AccountSummary summary = null;
	
	/**
	 * Connect to the Cloud
	 * @param username username to connect with
	 * @param password password to connect with
	 * @throws CloudResponseException Exception encountered when logging in
	 */
	public static void connect(String username, byte[] password) throws CloudResponseException {
		try {
			if (CloudOrganizer.cloudClient == null) {
				credsProv = new CloudOrganizerCredentialsProvider(username, password);
				CloudManager.set(credsProv, CloudConfigs.fromConfig());
			}
			CloudOrganizer.cloudClient = CloudManager.client(new CloudCredentials(username, password), false);
			summary = getAccountSummary(0);
		} catch (CloudResponseException e) {
			throw e;
		}
	}
	
	public static AccountSummary getAccountSummary() {
		if (summary == null) {
			summary = getAccountSummary(0);
		}
		return new AccountSummary(summary);
	}
	
	private static AccountSummary getAccountSummary(int tries) {
		try {
			AccountSummary summary = (new GetAccountSummaryCommand(CloudOrganizer.getCloudClient())).execute();
			return summary;
		} catch (CloudResponseException e) {
			if (tries >= MAX_RETRIES) {
				MIMLog.error("Couldn't get account summary - " + e, CloudOrganizer.class);
			} else {
				return getAccountSummary(tries + 1);
			}
		}
		return null;
	}
	
	public static byte[] getClientPassword() {
		return credsProv.getPassword();
	}
	
	public static String getClientEmail() {
		return credsProv.getUsername();
	}
	
	/**
	 * Get the CloudClient
	 * @return CloudClient
	 */
	public static CloudClient getCloudClient() {
		return cloudClient;
	}

	/**
	 * Creates the frame and starts the initial controller
	 * @param args don't have any args
	 */
	public static void main(String[] args) {
		new CloudOrganizerFrame();	
		new LoginController();
	}

}
