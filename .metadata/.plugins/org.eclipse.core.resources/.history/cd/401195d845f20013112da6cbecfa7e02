package panels;

import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;

import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;

import com.google.common.collect.Lists;
import com.lowagie.text.Font;
import com.mimvista.cloud.crypto.common.items.BasicStudyItem;
import com.mimvista.cloud.crypto.common.items.BasicStudyItem.BasicSeriesItem;
import com.mimvista.cloud.organizer.verifier.CloudSearch;
import com.mimvista.cloud.organizer.verifier.proui.NavigationPanel;
import com.mimvista.cloud.organizer.verifier.proui.SwapPanel;
import com.mimvista.cloud.organizer.verifier.proui.BoxUtil;

public class VerifierHomePanel extends JPanel {

	private static final long serialVersionUID = 1L;

	private SwapPanel swapPanel;

	private JButton searchCloud = new JButton("Search from Matching Studies");
	private JButton searchAll = new JButton("Search from All Studies");
	private JButton searchCsv = new JButton("Search from Input File");

	private ActionListener openCSV = new ActionListener() {
		@Override
		public void actionPerformed(ActionEvent e) {
			VerifierCSVLoader searchCsv = new VerifierCSVLoader(VerifierHomePanel.this.swapPanel);
			VerifierHomePanel.this.swapPanel.swapTo(new NavigationPanel(searchCsv, searchCsv));
		}
	};
	
	public VerifierHomePanel(SwapPanel swapPanel) {
		this.swapPanel = swapPanel;
		setLayout(new BoxLayout(this, BoxLayout.Y_AXIS));
		JLabel title = new JLabel("MIMcloud Data Verifier");
		title.setFont(title.getFont().deriveFont(Font.BOLD, 24));

		searchCloud.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				VerifierSearchOptions searchOptions = new VerifierSearchOptions(VerifierHomePanel.this.swapPanel);
				VerifierHomePanel.this.swapPanel.swapTo(new NavigationPanel(searchOptions, searchOptions));
			}
		});
		searchAll.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				List<BasicStudyItem> items = CloudSearch.fakeSearch(50, null, null);
				List<VerifierSearchResultView> views = Lists.newArrayList();
				for (BasicStudyItem item : items) {
					for (BasicSeriesItem series:item.getAllSeries())
					views.add(new VerifierSearchResultView(item.getDetails(), series.getDetails()));
				}
				VerifierSearchResultDisplay disp = new VerifierSearchResultDisplay(VerifierHomePanel.this.swapPanel, views);
				VerifierHomePanel.this.swapPanel.swapTo(new NavigationPanel(disp, disp));
			}
		});
		searchCsv.addActionListener(openCSV);
		
		add(Box.createVerticalGlue());
		BoxUtil.insert(title, this);
		add(Box.createVerticalStrut(25));
		BoxUtil.insert(searchCloud, this);
		add(Box.createVerticalStrut(5));
		BoxUtil.insert(searchAll, this);
		add(Box.createVerticalStrut(5));
		BoxUtil.insert(searchCsv, this);
		add(Box.createVerticalGlue());

	}
}
