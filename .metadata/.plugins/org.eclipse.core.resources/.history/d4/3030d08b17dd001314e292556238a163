package PNGDecoder.Chunks;

import PNGDecoder.Chunk;
import PNGDecoder.ChunkRegistry;

public class ChunkPLTE extends Chunk {

	public static final String plteSize = "PLTE size";
	private static int entriesPerRow = 8;

	private boolean valid = true;
	
	public static void register() {
		ChunkRegistry.registerChunk("PLTE", ChunkPLTE.class);
		System.out.println("PLTE Chunk Registered.");
	}

	public ChunkPLTE(int size, byte[] header, byte[] data, int crc) {
		super(size, header, data, crc);
		if (parseState.containsKey(plteSize))
			valid = size/3 == parseState.get(plteSize);
		else 
			parseState.put(plteSize, size/3);
	}

	protected boolean valid() {
		return size % 3 == 0 && size <= 256 * 3 && size > 0;
	}

	protected String chunkDescription() {
		if (valid){
		String s = "\tColor Palette:";
		for (int i = 0; i < size / 3; i++) {
			if (i % entriesPerRow == 0)
				s += "\n";
			s += "\t\t" + i + ":\t0x" + toHex(data[i * 3]) + toHex(data[i * 3 + 1]) + toHex(data[i * 3 + 2]);
		}
		return s;
		}
		else
			return "Invalid PLTE Chunk. PLTE size must match other PLTE dependent chunks.";
	}

}
