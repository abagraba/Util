package PNGDecoder.Chunks;

import PNGDecoder.Chunk;
import PNGDecoder.ChunkRegistry;

public class ChunkpHYs extends Chunk {

	public static void register() {
		ChunkRegistry.registerChunk(pHYs, ChunkpHYs.class);
		System.out.println("pHYs Chunk Registered.");
	}

	public ChunkpHYs(int size, byte[] header, byte[] data, int crc) {
		super(size, header, data, crc);
		if (parseState.containsKey(pHYs)){
			valid = false;
			errorDetails = "There may only be one pHYs Chunk.";
		}
		parseState.put(pHYs, 0);
	}

	protected boolean valid() {
		return size == 9;
	}

	protected String chunkDescription() {
		return pad("X-axis:") + unsign(toInt(data, 0)) + "\n" + pad("Y-axis:") + unsign(toInt(data, 4)) + "\n" + pad("Unit:") + pHYsUnit.get(data[8]);
	}

	private enum pHYsUnit {
		ratio("Ratio"), meter("Meters");

		private String name;

		public static pHYsUnit get(int i) {
			if (i < 0 || i >= values().length)
				return null;
			return values()[i];
		}

		private pHYsUnit(String name) {
			this.name = name;
		}

		public String toString() {
			return name;
		}
	}

}
